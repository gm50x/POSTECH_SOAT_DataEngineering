services:
  mongodb:
    image: fiap/mongodbrs:6
    build:
      context: .
      dockerfile: ./Dockerfile.mongodb
    container_name: fiap-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: "fiap"
      MONGO_INITDB_ROOT_PASSWORD: "fiap"
    command: "mongod --replSet rs0 --keyFile /opt/.keyfile/keyfile --bind_ip_all"
    ports:
      - 27017:27017
  mongodb_init:
    image: mongo:6
    container_name: fiap-mongodb-init
    restart: on-failure
    depends_on: [mongodb]
    command: >-
      sh -c "sleep 10 && mongosh -u fiap -p fiap --host mongodb:27017 --eval 'rs.initiate({
        \"_id\":\"rs0\",
        "members":[
          {
            \"_id\": 0,
            \"host\":\"host.docker.internal:27017\",
          }
        ]
      })' && if [ $(mongosh -u fiap -p fiap --quiet --host mongodb:27017 --eval 'rs.status().ok') -eq 1 ]; then exit 0; else exit 1; fi"
  redis:
    image: redis:7.4-alpine
    command: redis-server --requirepass fiap
    container_name: fiap-redis
    hostname: redis
    ports:
      - 6379:6379
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    depends_on: [redis]
    image: rediscommander/redis-commander:latest
    restart: on-failure
    environment:
      REDIS_HOST: "redis"
      REDIS_HOSTS: "redis"
      REDIS_PORT: "redis:6379"
      REDIS_PASSWORD: "fiap"
    ports:
      - "16379:8081"
  cassandra:
    image: cassandra:5.0
    container_name: fiap-cassandra
    restart: on-failure
    environment:
      CASSANDRA_USER: fiap
      CASSANDRA_PASSWORD: fiap
    ports:
      - 9042:9042 # CQL Transport
      - 7199:7199 # Thrift Client API
      - 9160:9160 # JMX
  neo4j:
    image: neo4j:5.23-community
    container_name: fiap-neo4j
    restart: on-failure
    ports:
      - 7474:7474 # http interface
      - 7687:7687 # bolt interface
    environment:
      NEO4J_AUTH: neo4j/fiap@neo4j # user/pass
